#! /usr/bin/env python

"""Search text

Usage: %(prog)s searches [files]

Searches ("fred" is a regular expression):

    =fred        show only lines with fred
    =-fred       remove all lines with fred

"""

import re

from pysyte.cli import lines
from pysyte.cli.main import run


def add_args(parser: ArgumentsParser):
    parser_ = lines.add_args(parser)
    parser_.positional("searches", help="What to search for")
    parser_.add_files(action="search")
    return parser_


def parse_sought(string, separator):
    regexp = re.compile(
        f"""
        (?P<separator>[{separator}])
        (?P<sought>[^{separator}]+)
    """,
        re.VERBOSE,
    )
    match = regexp.match(string)
    if not match:
        return {}
    result = match.groupdict()
    result["separator"] = separator
    return result


def parse_action(search):
    sought = search[1:]
    action = {
        "separator": "=",
        "sought": sought,
    }
    if sought[0] == "-":
        action["separator"] = "."
        action["sought"] = sought[1:]
    return action


def post_parse(args):
    files = []
    actions = []
    for search in args.searches:
        if search[0] == "=":
            actions.append(parse_action(search))
        else:
            files.append(search)
    args.actions = actions
    args._result.files = files
    return args


def main(args):
    print(f"Files: {args.files}")
    for action in args.actions:
        sought = action.get("sought", "")
        separator = action.get("separator", "")
        print(f'{"Find" if separator == "=" else "Remove"} {sought}')


run(main, add_args, post_parse)
